{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "**Installation & Setup:**"
      ],
      "metadata": {
        "id": "HrJpNo4wQN8o"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install wikipedia-api neptune neptune-notebooks pandas spacy networkx scipy"
      ],
      "metadata": {
        "id": "ZXVUlDIcQJ2v"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Install Dependencies:**"
      ],
      "metadata": {
        "id": "g8i6QLw4QiBQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import re\n",
        "import pandas as pd\n",
        "import bs4\n",
        "import requests\n",
        "import spacy\n",
        "from spacy import displacy\n",
        "nlp = spacy.load('en_core_web_sm')\n",
        "\n",
        "from spacy.matcher import Matcher\n",
        "from spacy.tokens import Span\n",
        "\n",
        "import networkx as nx\n",
        "\n",
        "import matplotlib.pyplot as plt\n",
        "from tqdm import tqdm\n",
        "\n",
        "pd.set_option('display.max_colwidth', 200)\n",
        "%matplotlib inline"
      ],
      "metadata": {
        "id": "QCJFNcAVQJ5W"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Fetch Articles based on provided topic:**"
      ],
      "metadata": {
        "id": "FMH-FTC9Qlhe"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def scrape_wikipedia(name_topic, verbose=True):\n",
        "   def link_to_wikipedia(link):\n",
        "       try:\n",
        "           page = api_wikipedia.page(link)\n",
        "           if page.exists():\n",
        "               return {'page': link, 'text': page.text, 'link': page.fullurl, 'categories': list(page.categories.keys())}\n",
        "       except:\n",
        "           return None\n",
        "\n",
        "   api_wikipedia = wikipediaapi.Wikipedia(language='en', extract_format=wikipediaapi.ExtractFormat.WIKI)\n",
        "   name_of_page = api_wikipedia.page(name_topic)\n",
        "   if not name_of_page.exists():\n",
        "       print('Page {} is not present'.format(name_of_page))\n",
        "       return\n",
        "\n",
        "   links_to_page = list(name_of_page.links.keys())\n",
        "   procceed = tqdm(desc='Scraped links', unit='', total=len(links_to_page)) if verbose else None\n",
        "   origin = [{'page': name_topic, 'text': name_of_page.text, 'link': name_of_page.fullurl, 'categories': list(name_of_page.categories.keys())}]\n",
        "\n",
        "   with concurrent.futures.ThreadPoolExecutor(max_workers=5) as executor:\n",
        "       links_future = {executor.submit(link_to_wikipedia, link): link for link in links_to_page}\n",
        "       for future in concurrent.futures.as_completed(links_future):\n",
        "           info = future.result()\n",
        "           origin.append(info) if info else None\n",
        "           procceed.update(1) if verbose else None\n",
        "   procceed.close() if verbose else None\n",
        "\n",
        "   namespaces = ('Wikipedia', 'Special', 'Talk', 'LyricWiki', 'File', 'MediaWiki',\n",
        "                 'Template', 'Help', 'User', 'Category talk', 'Portal talk')\n",
        "   origin = pd.DataFrame(origin)\n",
        "   origin = origin[(len(origin['text']) > 20)\n",
        "                     & ~(origin['page'].str.startswith(namespaces, na=True))]\n",
        "   origin['categories'] = origin.categories.apply(lambda a: [b[9:] for b in a])\n",
        "\n",
        "   origin['topic'] = name_topic\n",
        "   print('Scraped pages', len(origin))\n",
        "\n",
        "   return origin\n"
      ],
      "metadata": {
        "id": "DjHyzqbFQJ73"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Read Use Cases:**"
      ],
      "metadata": {
        "id": "f8xp95jJQ6if"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "use_case =  pd.read_html('https://www.newtonx.com/') #unified Host and Network Data Set\n",
        "use_case"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 354
        },
        "id": "UgqA6i7MQJ-P",
        "outputId": "da77b2d4-8f1f-4277-b9c2-26ae022a3592"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "HTTPError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mHTTPError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-32-dc3a630e13bf>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0muse_case\u001b[0m \u001b[0;34m=\u001b[0m  \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_html\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'https://www.newtonx.com/'\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m#unified Host and Network Data Set\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0muse_case\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/util/_decorators.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    329\u001b[0m                     \u001b[0mstacklevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfind_stack_level\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    330\u001b[0m                 )\n\u001b[0;32m--> 331\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    332\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    333\u001b[0m         \u001b[0;31m# error: \"Callable[[VarArg(Any), KwArg(Any)], Any]\" has no\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/html.py\u001b[0m in \u001b[0;36mread_html\u001b[0;34m(io, match, flavor, header, index_col, skiprows, attrs, parse_dates, thousands, encoding, decimal, converters, na_values, keep_default_na, displayed_only, extract_links)\u001b[0m\n\u001b[1;32m   1203\u001b[0m     \u001b[0mio\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mstringify_path\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mio\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1204\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1205\u001b[0;31m     return _parse(\n\u001b[0m\u001b[1;32m   1206\u001b[0m         \u001b[0mflavor\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mflavor\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1207\u001b[0m         \u001b[0mio\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mio\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/html.py\u001b[0m in \u001b[0;36m_parse\u001b[0;34m(flavor, io, match, attrs, encoding, displayed_only, extract_links, **kwargs)\u001b[0m\n\u001b[1;32m    984\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    985\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 986\u001b[0;31m             \u001b[0mtables\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mparse_tables\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    987\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mValueError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mcaught\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    988\u001b[0m             \u001b[0;31m# if `io` is an io-like object, check if it's seekable\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/html.py\u001b[0m in \u001b[0;36mparse_tables\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    260\u001b[0m         \u001b[0mlist\u001b[0m \u001b[0mof\u001b[0m \u001b[0mparsed\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mheader\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbody\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfooter\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0mtuples\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtables\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    261\u001b[0m         \"\"\"\n\u001b[0;32m--> 262\u001b[0;31m         \u001b[0mtables\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parse_tables\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_build_doc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmatch\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mattrs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    263\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parse_thead_tbody_tfoot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtable\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mtable\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mtables\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    264\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/html.py\u001b[0m in \u001b[0;36m_build_doc\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    819\u001b[0m                     \u001b[0;32mpass\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    820\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 821\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    822\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    823\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mhasattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"text_content\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/html.py\u001b[0m in \u001b[0;36m_build_doc\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    800\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    801\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mis_url\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mio\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 802\u001b[0;31m                 \u001b[0;32mwith\u001b[0m \u001b[0murlopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mio\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    803\u001b[0m                     \u001b[0mr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mparse\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparser\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mparser\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    804\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/common.py\u001b[0m in \u001b[0;36murlopen\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    263\u001b[0m     \u001b[0;32mimport\u001b[0m \u001b[0murllib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrequest\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    264\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 265\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0murllib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrequest\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0murlopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    266\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    267\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/lib/python3.10/urllib/request.py\u001b[0m in \u001b[0;36murlopen\u001b[0;34m(url, data, timeout, cafile, capath, cadefault, context)\u001b[0m\n\u001b[1;32m    214\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    215\u001b[0m         \u001b[0mopener\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_opener\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 216\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mopener\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0murl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtimeout\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    217\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    218\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0minstall_opener\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mopener\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/lib/python3.10/urllib/request.py\u001b[0m in \u001b[0;36mopen\u001b[0;34m(self, fullurl, data, timeout)\u001b[0m\n\u001b[1;32m    523\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mprocessor\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprocess_response\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mprotocol\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    524\u001b[0m             \u001b[0mmeth\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mprocessor\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmeth_name\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 525\u001b[0;31m             \u001b[0mresponse\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmeth\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mreq\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mresponse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    526\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    527\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mresponse\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/lib/python3.10/urllib/request.py\u001b[0m in \u001b[0;36mhttp_response\u001b[0;34m(self, request, response)\u001b[0m\n\u001b[1;32m    632\u001b[0m         \u001b[0;31m# request was successfully received, understood, and accepted.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    633\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;36m200\u001b[0m \u001b[0;34m<=\u001b[0m \u001b[0mcode\u001b[0m \u001b[0;34m<\u001b[0m \u001b[0;36m300\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 634\u001b[0;31m             response = self.parent.error(\n\u001b[0m\u001b[1;32m    635\u001b[0m                 'http', request, response, code, msg, hdrs)\n\u001b[1;32m    636\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/lib/python3.10/urllib/request.py\u001b[0m in \u001b[0;36merror\u001b[0;34m(self, proto, *args)\u001b[0m\n\u001b[1;32m    561\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mhttp_err\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    562\u001b[0m             \u001b[0margs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mdict\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'default'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'http_error_default'\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0morig_args\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 563\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call_chain\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    564\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    565\u001b[0m \u001b[0;31m# XXX probably also want an abstract factory that knows when it makes\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/lib/python3.10/urllib/request.py\u001b[0m in \u001b[0;36m_call_chain\u001b[0;34m(self, chain, kind, meth_name, *args)\u001b[0m\n\u001b[1;32m    494\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mhandler\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mhandlers\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    495\u001b[0m             \u001b[0mfunc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhandler\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmeth_name\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 496\u001b[0;31m             \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    497\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mresult\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    498\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mresult\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/lib/python3.10/urllib/request.py\u001b[0m in \u001b[0;36mhttp_error_default\u001b[0;34m(self, req, fp, code, msg, hdrs)\u001b[0m\n\u001b[1;32m    641\u001b[0m \u001b[0;32mclass\u001b[0m \u001b[0mHTTPDefaultErrorHandler\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mBaseHandler\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    642\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mhttp_error_default\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreq\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfp\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcode\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmsg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhdrs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 643\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mHTTPError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mreq\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfull_url\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcode\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmsg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhdrs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfp\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    644\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    645\u001b[0m \u001b[0;32mclass\u001b[0m \u001b[0mHTTPRedirectHandler\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mBaseHandler\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mHTTPError\u001b[0m: HTTP Error 403: Forbidden"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Sentence Segmentation:**"
      ],
      "metadata": {
        "id": "aBjXUfSJT4i-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "doc = nlp(str(use_case))\n",
        "\n",
        "for tok in doc:\n",
        "  print(tok.text, \"...\", tok.dep_)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QGmkwEc2QKAf",
        "outputId": "14086337-9a8d-4b55-d116-0d4d32137905"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[ ... punct\n",
            "    ... dep\n",
            "Field ... compound\n",
            "Name ... compound\n",
            "                                                 ... dep\n",
            "Description ... ROOT\n",
            "\n",
            " ... dep\n",
            "0 ... punct\n",
            "         ... dep\n",
            "Time ... ROOT\n",
            "            ... dep\n",
            "The ... det\n",
            "start ... amod\n",
            "time ... ROOT\n",
            "of ... prep\n",
            "the ... det\n",
            "event ... pobj\n",
            "in ... prep\n",
            "epoch ... compound\n",
            "time ... compound\n",
            "format ... pobj\n",
            "\n",
            " ... dep\n",
            "1 ... nummod\n",
            "     ... dep\n",
            "Duration ... appos\n",
            "                       ... dep\n",
            "The ... det\n",
            "duration ... appos\n",
            "of ... prep\n",
            "the ... det\n",
            "event ... pobj\n",
            "in ... prep\n",
            "seconds ... pobj\n",
            ". ... punct\n",
            "\n",
            " ... dep\n",
            "2 ... nummod\n",
            "    ... dep\n",
            "SrcDevice ... ROOT\n",
            "                 ... dep\n",
            "The ... det\n",
            "device ... ROOT\n",
            "that ... nsubj\n",
            "likely ... advmod\n",
            "initiated ... relcl\n",
            "the ... det\n",
            "event ... dobj\n",
            ". ... punct\n",
            "\n",
            " ... dep\n",
            "3 ... nummod\n",
            "    ... dep\n",
            "DstDevice ... appos\n",
            "                                       ... dep\n",
            "The ... det\n",
            "receiving ... amod\n",
            "device ... ROOT\n",
            ". ... punct\n",
            "\n",
            " ... dep\n",
            "4 ... nummod\n",
            "     ... dep\n",
            "Protocol ... ROOT\n",
            "                                        ... dep\n",
            "The ... det\n",
            "protocol ... compound\n",
            "number ... ROOT\n",
            ". ... punct\n",
            "\n",
            " ... dep\n",
            "5 ... nummod\n",
            "      ... dep\n",
            "SrcPort ... compound\n",
            "                             ... dep\n",
            "The ... det\n",
            "port ... ROOT\n",
            "used ... acl\n",
            "by ... agent\n",
            "the ... det\n",
            "SrcDevice ... pobj\n",
            ". ... punct\n",
            "\n",
            " ... dep\n",
            "6 ... nummod\n",
            "      ... dep\n",
            "DstPort ... compound\n",
            "                             ... dep\n",
            "The ... det\n",
            "port ... ROOT\n",
            "used ... acl\n",
            "by ... agent\n",
            "the ... det\n",
            "DstDevice ... pobj\n",
            ". ... punct\n",
            "\n",
            " ... dep\n",
            "7 ... nummod\n",
            "   ... dep\n",
            "SrcPackets ... ROOT\n",
            "  ... dep\n",
            "The ... det\n",
            "number ... ROOT\n",
            "of ... prep\n",
            "packets ... pobj\n",
            "the ... det\n",
            "SrcDevice ... nsubj\n",
            "sent ... relcl\n",
            "during ... prep\n",
            "the ... det\n",
            "event ... pobj\n",
            ". ... punct\n",
            "\n",
            " ... dep\n",
            "8 ... nummod\n",
            "   ... dep\n",
            "DstPackets ... ROOT\n",
            "  ... dep\n",
            "The ... det\n",
            "number ... ROOT\n",
            "of ... prep\n",
            "packets ... pobj\n",
            "the ... det\n",
            "DstDevice ... nsubj\n",
            "sent ... relcl\n",
            "during ... prep\n",
            "the ... det\n",
            "event ... pobj\n",
            ". ... punct\n",
            "\n",
            " ... dep\n",
            "9 ... nummod\n",
            "     ... dep\n",
            "SrcBytes ... ROOT\n",
            "    ... dep\n",
            "The ... det\n",
            "number ... ROOT\n",
            "of ... prep\n",
            "bytes ... pobj\n",
            "the ... det\n",
            "SrcDevice ... nsubj\n",
            "sent ... relcl\n",
            "during ... prep\n",
            "the ... det\n",
            "event ... pobj\n",
            ". ... punct\n",
            "\n",
            " ... dep\n",
            "10 ... nummod\n",
            "    ... dep\n",
            "DstBytes ... appos\n",
            "    ... dep\n",
            "The ... det\n",
            "number ... appos\n",
            "of ... prep\n",
            "bytes ... pobj\n",
            "the ... det\n",
            "DstDevice ... nsubj\n",
            "sent ... relcl\n",
            "during ... prep\n",
            "the ... det\n",
            "event ... pobj\n",
            ". ... punct\n",
            ", ... punct\n",
            "     ... dep\n",
            "EventID ... prep\n",
            "  ... dep\n",
            "\\ ... pobj\n",
            "\n",
            " ... dep\n",
            "0 ... prep\n",
            "      ... dep\n",
            "4768 ... nummod\n",
            "  \n",
            " ... dep\n",
            "1 ... compound\n",
            "      ... dep\n",
            "4769 ... nummod\n",
            "  \n",
            " ... dep\n",
            "2 ... prep\n",
            "      ... dep\n",
            "4770 ... nummod\n",
            "  \n",
            " ... dep\n",
            "3 ... prep\n",
            "      ... dep\n",
            "4774 ... nummod\n",
            "  \n",
            " ... dep\n",
            "4 ... advmod\n",
            "      ... dep\n",
            "4776 ... appos\n",
            "  \n",
            " ... dep\n",
            "5 ... advmod\n",
            "      ... dep\n",
            "4624 ... nummod\n",
            "  \n",
            " ... dep\n",
            "6 ... nummod\n",
            "      ... dep\n",
            "4625 ... npadvmod\n",
            "  \n",
            " ... dep\n",
            "7 ... nummod\n",
            "      ... dep\n",
            "4634 ... appos\n",
            "  \n",
            " ... dep\n",
            "8 ... prep\n",
            "      ... dep\n",
            "4647 ... advmod\n",
            "  \n",
            " ... dep\n",
            "9 ... compound\n",
            "      ... dep\n",
            "4648 ... nummod\n",
            "  \n",
            " ... dep\n",
            "10 ... nummod\n",
            "     ... dep\n",
            "4672 ... appos\n",
            "  \n",
            " ... dep\n",
            "11 ... nummod\n",
            "     ... dep\n",
            "4800 ... appos\n",
            "  \n",
            " ... dep\n",
            "12 ... nummod\n",
            "     ... dep\n",
            "4801 ... appos\n",
            "  \n",
            " ... dep\n",
            "13 ... compound\n",
            "     ... dep\n",
            "4802 ... appos\n",
            "  \n",
            " ... dep\n",
            "14 ... punct\n",
            "     ... dep\n",
            "4803 ... advmod\n",
            "  \n",
            " ... dep\n",
            "15 ... compound\n",
            "     ... dep\n",
            "4688 ... nummod\n",
            "  \n",
            " ... dep\n",
            "16 ... advmod\n",
            "     ... dep\n",
            "4689 ... appos\n",
            "  \n",
            " ... dep\n",
            "17 ... nummod\n",
            "     ... dep\n",
            "4608 ... prep\n",
            "  \n",
            " ... dep\n",
            "18 ... compound\n",
            "     ... dep\n",
            "4609 ... nummod\n",
            "  \n",
            " ... dep\n",
            "19 ... nummod\n",
            "     ... dep\n",
            "1100 ... nummod\n",
            "  \n",
            "\n",
            "                                                                      ... dep\n",
            "Description ... conj\n",
            " \n",
            " ... dep\n",
            "0 ... punct\n",
            "                             ... dep\n",
            "Kerberos ... compound\n",
            "authentication ... compound\n",
            "ticket ... nsubjpass\n",
            "was ... auxpass\n",
            "requested ... ROOT\n",
            "( ... punct\n",
            "TGT ... npadvmod\n",
            ") ... punct\n",
            " \n",
            " ... dep\n",
            "1 ... nummod\n",
            "                                    ... dep\n",
            "Kerberos ... compound\n",
            "service ... compound\n",
            "ticket ... nsubjpass\n",
            "was ... auxpass\n",
            "requested ... conj\n",
            "( ... punct\n",
            "TGS ... oprd\n",
            ") ... punct\n",
            " \n",
            " ... dep\n",
            "2 ... punct\n",
            "                                            ... dep\n",
            "Kerberos ... compound\n",
            "service ... compound\n",
            "ticket ... nsubjpass\n",
            "was ... auxpass\n",
            "renewed ... conj\n",
            " \n",
            " ... dep\n",
            "3 ... punct\n",
            "                                                ... dep\n",
            "An ... det\n",
            "account ... nsubjpass\n",
            "was ... auxpass\n",
            "mapped ... ROOT\n",
            "for ... prep\n",
            "logon ... pobj\n",
            " \n",
            " ... dep\n",
            "4 ... nummod\n",
            "     ... dep\n",
            "The ... det\n",
            "domain ... compound\n",
            "controller ... nsubj\n",
            "attempted ... conj\n",
            "to ... aux\n",
            "validate ... xcomp\n",
            "the ... det\n",
            "credentials ... dobj\n",
            "for ... prep\n",
            "an ... det\n",
            "account ... pobj\n",
            " \n",
            " ... dep\n",
            "5 ... nummod\n",
            "                                          ... dep\n",
            "An ... det\n",
            "account ... nsubjpass\n",
            "was ... auxpass\n",
            "successfully ... advmod\n",
            "logged ... ROOT\n",
            "on ... prep\n",
            " \n",
            " ... dep\n",
            "6 ... pobj\n",
            "                                                  ... dep\n",
            "An ... det\n",
            "account ... nsubj\n",
            "failed ... advcl\n",
            "to ... aux\n",
            "logon ... xcomp\n",
            "on ... prep\n",
            " \n",
            " ... dep\n",
            "7 ... pobj\n",
            "                                                       ... dep\n",
            "An ... det\n",
            "account ... nsubjpass\n",
            "was ... auxpass\n",
            "logged ... conj\n",
            "on ... prep\n",
            " \n",
            " ... dep\n",
            "8 ... nummod\n",
            "                                                           ... dep\n",
            "User ... pobj\n",
            "initiated ... advcl\n",
            "logon ... dobj\n",
            " \n",
            " ... dep\n",
            "9 ... nummod\n",
            "                               ... dep\n",
            "A ... det\n",
            "logon ... nsubjpass\n",
            "was ... auxpass\n",
            "attempted ... conj\n",
            "using ... xcomp\n",
            "explicit ... amod\n",
            "credentials ... dobj\n",
            " \n",
            " ... dep\n",
            "10 ... nummod\n",
            "                                    ... dep\n",
            "Special ... amod\n",
            "privileges ... dobj\n",
            "assigned ... acl\n",
            "to ... prep\n",
            "a ... det\n",
            "new ... amod\n",
            "logon ... pobj\n",
            " \n",
            " ... dep\n",
            "11 ... punct\n",
            "                                                    ... dep\n",
            "The ... det\n",
            "workstation ... nsubjpass\n",
            "was ... auxpass\n",
            "locked ... ROOT\n",
            " \n",
            " ... dep\n",
            "12 ... dobj\n",
            "                                                  ... dep\n",
            "The ... det\n",
            "workstation ... nsubj\n",
            "was ... ROOT\n",
            "unlocked ... acomp\n",
            " \n",
            " ... dep\n",
            "13 ... punct\n",
            "                                                   ... dep\n",
            "The ... det\n",
            "screensaver ... nsubjpass\n",
            "was ... auxpass\n",
            "invoked ... ROOT\n",
            " \n",
            " ... dep\n",
            "14 ... dobj\n",
            "                                                 ... dep\n",
            "The ... det\n",
            "screensaver ... nsubjpass\n",
            "was ... auxpass\n",
            "dismissed ... ROOT\n",
            " \n",
            " ... dep\n",
            "15 ... nummod\n",
            "                                                                 ... dep\n",
            "Process ... nsubj\n",
            "start ... ccomp\n",
            " \n",
            " ... dep\n",
            "16 ... nummod\n",
            "                                                                   ... dep\n",
            "Process ... nsubj\n",
            "end ... ccomp\n",
            " \n",
            " ... dep\n",
            "17 ... nummod\n",
            "                                                        ... dep\n",
            "Windows ... nsubj\n",
            "is ... aux\n",
            "starting ... ccomp\n",
            "up ... prt\n",
            " \n",
            " ... dep\n",
            "18 ... nummod\n",
            "                                                      ... dep\n",
            "Windows ... nsubj\n",
            "is ... aux\n",
            "shutting ... ccomp\n",
            "down ... prt\n",
            " \n",
            " ... dep\n",
            "19 ... nummod\n",
            "  ... dep\n",
            "Event ... compound\n",
            "logging ... amod\n",
            "service ... nsubj\n",
            "has ... aux\n",
            "shut ... ccomp\n",
            "down ... prt\n",
            "( ... punct\n",
            "often ... advmod\n",
            "recorded ... parataxis\n",
            "instead ... advmod\n",
            "of ... cc\n",
            "EventID ... dobj\n",
            "4609 ... nummod\n",
            ") ... punct\n",
            "  ... dep\n",
            "] ... punct\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "spacy.tokens.doc.Doc"
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Entities Extraction:**"
      ],
      "metadata": {
        "id": "GsRlvMeNUSn3"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def get_entities(sent):\n",
        "  ## chunk 1\n",
        "  ent1 = \"\"\n",
        "  ent2 = \"\"\n",
        "\n",
        "  prv_tok_dep = \"\"    # dependency tag of previous token in the sentence\n",
        "  prv_tok_text = \"\"   # previous token in the sentence\n",
        "\n",
        "  prefix = \"\"\n",
        "  modifier = \"\"\n",
        "\n",
        "  for tok in nlp(sent):\n",
        "    ## chunk 2\n",
        "    # if token is a punctuation mark then move on to the next token\n",
        "    if tok.dep_ != \"punct\":\n",
        "      # check: token is a compound word or not\n",
        "      if tok.dep_ == \"compound\":\n",
        "        prefix = tok.text\n",
        "        # if the previous word was also a 'compound' then add the current word to it\n",
        "        if prv_tok_dep == \"compound\":\n",
        "          prefix = prv_tok_text + \" \"+ tok.text\n",
        "\n",
        "      # check: token is a modifier or not\n",
        "      if tok.dep_.endswith(\"mod\") == True:\n",
        "        modifier = tok.text\n",
        "        # if the previous word was also a 'compound' then add the current word to it\n",
        "        if prv_tok_dep == \"compound\":\n",
        "          modifier = prv_tok_text + \" \"+ tok.text\n",
        "\n",
        "      ## chunk 3\n",
        "      if tok.dep_.find(\"subj\") == True:\n",
        "        ent1 = modifier +\" \"+ prefix + \" \"+ tok.text\n",
        "        prefix = \"\"\n",
        "        modifier = \"\"\n",
        "        prv_tok_dep = \"\"\n",
        "        prv_tok_text = \"\"\n",
        "\n",
        "      ## chunk 4\n",
        "      if tok.dep_.find(\"obj\") == True:\n",
        "        ent2 = modifier +\" \"+ prefix +\" \"+ tok.text\n",
        "\n",
        "      ## chunk 5\n",
        "      # update variables\n",
        "      prv_tok_dep = tok.dep_\n",
        "      prv_tok_text = tok.text\n",
        "\n",
        "\n",
        "  return [ent1.strip(), ent2.strip()]"
      ],
      "metadata": {
        "id": "p8rB8syUQKDB"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "get_entities(doc)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gLaofrOIQKFQ",
        "outputId": "3859879a-7125-4fc1-ad8c-df8e3c1066b5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['Event logging Event service', 'instead  EventID']"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Relation Extraction:**"
      ],
      "metadata": {
        "id": "xncff4CcVJQY"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def get_relation(sent):\n",
        "\n",
        "  doc = nlp(sent)\n",
        "\n",
        "  # Matcher class object\n",
        "  matcher = Matcher(nlp.vocab)\n",
        "\n",
        "  #define the pattern\n",
        "  pattern = [{'DEP':'ROOT'},\n",
        "            {'DEP':'prep','OP':\"?\"},\n",
        "            {'DEP':'agent','OP':\"?\"},\n",
        "            {'POS':'ADJ','OP':\"?\"}]\n",
        "\n",
        "  matcher.add(\"matching_1\", None, pattern)\n",
        "\n",
        "  matches = matcher(doc)\n",
        "  k = len(matches) - 1\n",
        "\n",
        "  span = doc[matches[k][1]:matches[k][2]]\n",
        "\n",
        "  return(span.text)"
      ],
      "metadata": {
        "id": "__RRLGbwQKHg"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Build Knowledge Graph:**"
      ],
      "metadata": {
        "id": "qz_n8rrpVWHL"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# extract subject\n",
        "source = [i[0] for i in entity_pairs]\n",
        "\n",
        "# extract object\n",
        "target = [i[1] for i in entity_pairs]\n",
        "\n",
        "kg_df = pd.DataFrame({'source':source, 'target':target, 'edge':relations})"
      ],
      "metadata": {
        "id": "TM0kg8MmQKJx"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "G=nx.from_pandas_edgelist(doc, \"source\", \"target\",\n",
        "                          edge_attr=True, create_using=nx.MultiDiGraph())"
      ],
      "metadata": {
        "id": "upuU27UbQKMK"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import spacy\n",
        "import networkx as nx\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Load spaCy model for NLP\n",
        "nlp = spacy.load(\"en_core_web_sm\")\n",
        "\n",
        "# Process a sample text to get a spaCy Doc object\n",
        "text = doc\n",
        "doc = nlp(text)\n",
        "\n",
        "# Create an empty directed graph\n",
        "knowledge_graph = nx.DiGraph()\n",
        "\n",
        "# Add nodes for entities\n",
        "for ent in doc.ents:\n",
        "    knowledge_graph.add_node(ent.text, label=\"Entity\", entity_type=ent.label_)\n",
        "\n",
        "# Add edges representing relationships between entities\n",
        "for i in range(len(doc.ents) - 1):\n",
        "    for j in range(i + 1, len(doc.ents)):\n",
        "        knowledge_graph.add_edge(doc.ents[i].text, doc.ents[j].text, label=\"Related\")\n",
        "\n",
        "# Visualize the knowledge graph\n",
        "pos = nx.spring_layout(knowledge_graph)\n",
        "nx.draw(knowledge_graph, pos, with_labels=True, font_weight='bold', node_size=700, node_color='skyblue', font_size=10, edge_color='gray', node_shape='o', arrowsize=20)\n",
        "plt.title(\"Unified Host and Network Data Set\")\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 539
        },
        "id": "YhdmL1zPVoM6",
        "outputId": "a952a31c-83a0-4729-f31d-676fdc0ee99d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "LLRfoxUnVoPX"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}
